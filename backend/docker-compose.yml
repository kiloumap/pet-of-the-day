services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=secret
      - DB_NAME=pet_of_the_day
      - JWT_SECRET=cX1iqVeMxAZbNEGrJsaM6miQeROZlidUc+5Mq8vYKnI=
      - PORT=8080
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/tmp  # Exclude tmp directory from volume
    networks:
      - pet-network

  db:
    image: postgres:15-alpine
    container_name: postgres_pet_of_the_day
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: pet_of_the_day
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pet_of_the_day"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - pet-network

  adminer:
    image: adminer:latest
    ports:
      - "8083:8080"
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db
    restart: unless-stopped
    networks:
      - pet-network
    profiles:
      - admin

volumes:
  db_data:
    driver: local

networks:
  pet-network:
    driver: bridge