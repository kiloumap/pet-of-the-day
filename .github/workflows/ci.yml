name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
    paths: [ 'backend/**' ]
  pull_request:
    branches: [ master, develop ]
    paths: [ 'backend/**' ]

jobs:
  validate:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: postgres
          POSTGRES_DB: pet_of_the_day
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Just
        uses: extractions/setup-just@v1

      - name: Install development tools
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install golang.org/x/tools/cmd/goimports@latest
          go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Download dependencies and generate code
        run: |
          go mod download
          chmod +x scripts/ent-setup.sh
          ./scripts/ent-setup.sh

      - name: Set environment variables for tests
        run: echo "GO_ENV=test" >> $GITHUB_ENV

      - name: Run full validation
        run: just validate
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: secret
          DB_NAME: pet_of_the_day

      - name: Run tests with coverage
        run: just test-coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.out
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

      - name: Run architectural tests
        run: just test-architecture

  build:
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t pet-of-the-day:${{ github.sha }} .

      - name: Save Docker image
        run: docker save pet-of-the-day:${{ github.sha }} | gzip > pet-of-the-day.tar.gz

      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: backend/pet-of-the-day.tar.gz
          retention-days: 7